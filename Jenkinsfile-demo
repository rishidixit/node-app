pipeline {
    agent any
    environment {
        DOCKER_TAG = getDockerTag()
    }
     stages {
         stage("Build Docker Image") {
             steps {
                 sh "docker build . -t rishidixit/nodeapp:${DOCKER_TAG}"
             }
         }
         stage("Docker HubPush") {
             steps{
                 withCredentials([string(credentialsId: 'dockerhub', variable: 'dockerHubPwd')]) {
                  sh "docker login -u rishidixit -p ${dockerHubPwd}"
                  sh "docker push rishidixit/nodeapp:${DOCKER_TAG}"
                 }
           }
         }
         stage("Deploy to k8s") {
             steps{
                 sh "chmod +x changeTag.sh"
                 sh "./changeTag.sh ${DOCKER_TAG}"
                 sshagent(['Kops-Node']) {
                 sh "scp -o StrictHostKeyChecking service.yml node-app-pod.yml ubuntu@3.236.107.31:/home/ubuntu/"
                 script{
                     try{
                         sh "ssh ubuntu@3.236.107.31 kubectl apply -f ."
                     }catch(error){
                         sh "ssh ubuntu@3.236.107.31 kubectl create -f ."
                     }

                     }
                 } 
}


             }
         }
     }
}


def getDockerTag() {
    def tag= sh script: 'git rev-parse HEAD', returnStdout: true
    return tag
}